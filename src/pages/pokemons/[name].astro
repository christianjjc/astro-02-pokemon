---
import type { GetStaticPaths } from 'astro';
import { Icon } from 'astro-icon/components';
import PokemonCard from '@components/pokemons/PokemonCard.astro';
import type { PokemonListI } from '@interfaces/pokemon-list.response';
import MainLayout from '@layouts/MainLayout.astro';
import Title from '@components/shared/Title.astro';

export const getStaticPaths = (async () => {
  const resp = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151');
  const { results } = (await resp.json()) as PokemonListI;

  //* Primera Forma
  //  const arrayPokemons = results.map((p) => ({ params: { name: p.name }, props: { name: p.name, url: p.url } }));
  //  return arrayPokemons;

  //* Segunda Forma
  // const arrayPokemons = results.map(({ name, url }) => ({ params: { name: name }, props: { name: name, url: url } }));
  // return arrayPokemons;

  //* Tercera Forma
  return results.map(({ name, url }) => ({
    params: { name },
    props: { name, url },
  }));

  // return [
  //     //
  //     { params: { name: 'bulbasaur' }, props: { name: 'bulbasaur', url: 'https://pokeapi.co/api/v2/pokemon/1/' } },
  //     { params: { name: 'charmander' }, props: { name: 'bulbasaur', url: 'https://pokeapi.co/api/v2/pokemon/2/' } },
  // ];
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split('/').at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout title={`Pokémon - #${id} ${name}`} description={`Información sobre ${name}`} image={imageSrc}>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div>
        <!-- <a href="/">Regresar</a> -->
        <button id="btn-back" class="text-blue-500" onclick="history.back()">Regresar</button>
        <Title>{name}</Title>
      </div>
      <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
        <Icon data-outline name="heart-outline" size={50} />
        <Icon data-full class="hidden" name="heart-full" size={50} />
      </button>
    </div>
    <PokemonCard name={name} url={url} isBig />
    <audio controls class="mt-5">
      <source src={audioSrc} type="audio/ogg" />
      Your Browser doies not support the audio element.
    </audio>
  </section>
</MainLayout>

<script>
  interface FavoritePokemonI {
    name: string;
    id: number;
  }

  const handlePageLoad = () => {
    let favoritePokemons: FavoritePokemonI[] = JSON.parse(
      //
      localStorage.getItem('favoritePokemons') ?? '[]',
    );

    console.log('favoritePokemons', favoritePokemons);

    const favoriteBtn = document.querySelector('#btn-favorite') as HTMLButtonElement;
    if (!favoriteBtn) return;
    const name = favoriteBtn.dataset.name ?? '';
    const id = favoriteBtn.dataset.id ?? '';
    const isFavorite = favoritePokemons.some((fav) => fav.name === name);

    const heartOutline = favoriteBtn.querySelector('[data-outline]') as HTMLElement;
    const heartFull = favoriteBtn.querySelector('[data-full]') as HTMLElement;

    if (isFavorite) {
      heartOutline.classList.add('hidden');
      heartFull.classList.remove('hidden');
    }

    const toogleFavorites = () => {
      const isFavorite = favoritePokemons.some((fav) => fav.name === name);
      if (isFavorite) {
        //Remover
        favoritePokemons = favoritePokemons.filter((fav) => fav.name !== name);
      } else {
        //Agregar
        favoritePokemons.push({ id: Number(id), name });
      }
      localStorage.setItem('favoritePokemons', JSON.stringify(favoritePokemons));
    };

    favoriteBtn.addEventListener('click', () => {
      heartOutline.classList.toggle('hidden');
      heartFull.classList.toggle('hidden');
      toogleFavorites();
    });
  };

  document.addEventListener('astro:page-load', handlePageLoad); // Astro event
</script>

<style>
  a {
    @apply hover:underline text-blue-500;
  }
  #btn-favorite {
    @apply hover:animate-heartbeat;
  }
</style>
